{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar field = document.querySelector(\".field\");\nvar rows = field.rows;\nvar container = document.querySelector(\".container\");\nvar ROW = \"row\";\nvar COLUMN = \"column\";\nfunction append(action) {\n    switch(action){\n        case ROW:\n            var lastRow = rows[rows.length - 1];\n            var newRow = lastRow.cloneNode(true);\n            field.appendChild(newRow);\n            break;\n        case COLUMN:\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var row = _step.value;\n                    var newCell = document.createElement(\"td\");\n                    row.appendChild(newCell);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            break;\n    }\n    updateButtonsState();\n}\nfunction remove(action) {\n    switch(action){\n        case ROW:\n            var lastRow = rows[rows.length - 1];\n            lastRow.remove();\n            break;\n        case COLUMN:\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var row = _step.value;\n                    var lastColumn = row.cells[row.cells.length - 1];\n                    lastColumn.remove();\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            break;\n    }\n    updateButtonsState();\n}\nfunction clickActionButton(e) {\n    var IS_APPEND_ROW = e.target.classList.contains(\"append-row\");\n    var IS_REMOVE_ROW = e.target.classList.contains(\"remove-row\");\n    var IS_APPEND_COLUMN = e.target.classList.contains(\"append-column\");\n    var IS_REMOVE_COLUMN = e.target.classList.contains(\"remove-column\");\n    var arr = [\n        IS_APPEND_ROW,\n        IS_REMOVE_ROW,\n        IS_APPEND_COLUMN,\n        IS_REMOVE_COLUMN\n    ];\n    var result = arr.findIndex(function(item) {\n        return item === true;\n    });\n    switch(result){\n        case 0:\n            append(ROW);\n            break;\n        case 1:\n            remove(ROW);\n            break;\n        case 2:\n            append(COLUMN);\n            break;\n        case 3:\n            remove(COLUMN);\n            break;\n    }\n}\nfunction updateButtonsState() {\n    var appendRow = document.querySelector(\".append-row\");\n    var appendColumn = document.querySelector(\".append-column\");\n    var removeRow = document.querySelector(\".remove-row\");\n    var removeColumn = document.querySelector(\".remove-column\");\n    var trList = field.querySelectorAll(\"tr\");\n    var allRows = _to_consumable_array(trList);\n    var allCols = field.querySelector(\"tr\").children;\n    removeRow.disabled = allRows.length <= 2;\n    appendRow.disabled = allRows.length >= 10;\n    removeColumn.disabled = allCols.length <= 2;\n    appendColumn.disabled = allCols.length >= 10;\n}\nupdateButtonsState();\ncontainer.addEventListener(\"click\", clickActionButton);\n\n//# sourceMappingURL=index.dbc3b9b7.js.map\n","'use strict';\n\n// write code here\nconst field = document.querySelector('.field');\nconst rows = field.rows;\nconst container = document.querySelector('.container');\nconst ROW = 'row';\nconst COLUMN = 'column';\n\nfunction append(action) {\n  switch (action) {\n    case ROW:\n      const lastRow = rows[rows.length - 1];\n      const newRow = lastRow.cloneNode(true);\n\n      field.appendChild(newRow);\n      break;\n\n    case COLUMN:\n      for (const row of rows) {\n        const newCell = document.createElement('td');\n\n        row.appendChild(newCell);\n      }\n      break;\n  }\n  updateButtonsState();\n}\n\nfunction remove(action) {\n  switch (action) {\n    case ROW:\n      const lastRow = rows[rows.length - 1];\n\n      lastRow.remove();\n      break;\n\n    case COLUMN:\n      for (const row of rows) {\n        const lastColumn = row.cells[row.cells.length - 1];\n\n        lastColumn.remove();\n      }\n      break;\n  }\n  updateButtonsState();\n}\n\nfunction clickActionButton(e) {\n  const IS_APPEND_ROW = e.target.classList.contains('append-row');\n  const IS_REMOVE_ROW = e.target.classList.contains('remove-row');\n  const IS_APPEND_COLUMN = e.target.classList.contains('append-column');\n  const IS_REMOVE_COLUMN = e.target.classList.contains('remove-column');\n\n  const arr = [\n    IS_APPEND_ROW,\n    IS_REMOVE_ROW,\n    IS_APPEND_COLUMN,\n    IS_REMOVE_COLUMN,\n  ];\n\n  const result = arr.findIndex((item) => item === true);\n\n  switch (result) {\n    case 0:\n      append(ROW);\n      break;\n    case 1:\n      remove(ROW);\n      break;\n    case 2:\n      append(COLUMN);\n      break;\n    case 3:\n      remove(COLUMN);\n      break;\n  }\n}\n\nfunction updateButtonsState() {\n  const appendRow = document.querySelector('.append-row');\n  const appendColumn = document.querySelector('.append-column');\n  const removeRow = document.querySelector('.remove-row');\n  const removeColumn = document.querySelector('.remove-column');\n\n  const trList = field.querySelectorAll('tr');\n\n  const allRows = [...trList];\n  const allCols = field.querySelector('tr').children;\n\n  removeRow.disabled = allRows.length <= 2;\n  appendRow.disabled = allRows.length >= 10;\n  removeColumn.disabled = allCols.length <= 2;\n  appendColumn.disabled = allCols.length >= 10;\n}\n\nupdateButtonsState();\ncontainer.addEventListener('click', clickActionButton);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","field","document","querySelector","rows","container","COLUMN","append","action","newRow","lastRow","cloneNode","appendChild","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","newCell","createElement","err","return","updateButtonsState","remove","lastColumn","cells","appendRow","appendColumn","removeRow","removeColumn","allRows","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","allCols","children","disabled","addEventListener","e","target","classList","contains","findIndex","item"],"version":3,"file":"index.dbc3b9b7.js.map"}