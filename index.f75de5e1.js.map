{"mappings":"AAAA;AAEA,kBAAkB;AAClB,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,OAAO,MAAM,IAAI;AACvB,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,MAAM;AACZ,MAAM,SAAS;AAEf,SAAS,OAAO,MAAM;IACpB,OAAQ;QACN,KAAK;YACH,MAAM,UAAU,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE;YACrC,MAAM,SAAS,QAAQ,SAAS,CAAC;YAEjC,MAAM,WAAW,CAAC;YAClB;QAEF,KAAK;YACH,KAAK,MAAM,OAAO,KAAM;gBACtB,MAAM,UAAU,SAAS,aAAa,CAAC;gBAEvC,IAAI,WAAW,CAAC;YAClB;YACA;IACJ;IACA;AACF;AAEA,SAAS,OAAO,MAAM;IACpB,OAAQ;QACN,KAAK;YACH,MAAM,UAAU,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE;YAErC,QAAQ,MAAM;YACd;QAEF,KAAK;YACH,KAAK,MAAM,OAAO,KAAM;gBACtB,MAAM,aAAa,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,EAAE;gBAElD,WAAW,MAAM;YACnB;YACA;IACJ;IACA;AACF;AAEA,SAAS,kBAAkB,CAAC;IAC1B,MAAM,gBAAgB,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IAClD,MAAM,gBAAgB,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IAClD,MAAM,mBAAmB,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IACrD,MAAM,mBAAmB,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IAErD,MAAM,MAAM;QACV;QACA;QACA;QACA;KACD;IAED,MAAM,SAAS,IAAI,SAAS,CAAC,CAAC,OAAS,SAAS;IAEhD,OAAQ;QACN,KAAK;YACH,OAAO;YACP;QACF,KAAK;YACH,OAAO;YACP;QACF,KAAK;YACH,OAAO;YACP;QACF,KAAK;YACH,OAAO;YACP;IACJ;AACF;AAEA,SAAS;IACP,MAAM,YAAY,SAAS,aAAa,CAAC;IACzC,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,YAAY,SAAS,aAAa,CAAC;IACzC,MAAM,eAAe,SAAS,aAAa,CAAC;IAE5C,MAAM,SAAS,MAAM,gBAAgB,CAAC;IAEtC,MAAM,UAAU;WAAI;KAAO;IAC3B,MAAM,UAAU,MAAM,aAAa,CAAC,MAAM,QAAQ;IAElD,UAAU,QAAQ,GAAG,QAAQ,MAAM,IAAI;IACvC,UAAU,QAAQ,GAAG,QAAQ,MAAM,IAAI;IACvC,aAAa,QAAQ,GAAG,QAAQ,MAAM,IAAI;IAC1C,aAAa,QAAQ,GAAG,QAAQ,MAAM,IAAI;AAC5C;AAEA;AACA,UAAU,gBAAgB,CAAC,SAAS","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write code here\nconst field = document.querySelector('.field');\nconst rows = field.rows;\nconst container = document.querySelector('.container');\nconst ROW = 'row';\nconst COLUMN = 'column';\n\nfunction append(action) {\n  switch (action) {\n    case ROW:\n      const lastRow = rows[rows.length - 1];\n      const newRow = lastRow.cloneNode(true);\n\n      field.appendChild(newRow);\n      break;\n\n    case COLUMN:\n      for (const row of rows) {\n        const newCell = document.createElement('td');\n\n        row.appendChild(newCell);\n      }\n      break;\n  }\n  updateButtonsState();\n}\n\nfunction remove(action) {\n  switch (action) {\n    case ROW:\n      const lastRow = rows[rows.length - 1];\n\n      lastRow.remove();\n      break;\n\n    case COLUMN:\n      for (const row of rows) {\n        const lastColumn = row.cells[row.cells.length - 1];\n\n        lastColumn.remove();\n      }\n      break;\n  }\n  updateButtonsState();\n}\n\nfunction clickActionButton(e) {\n  const IS_APPEND_ROW = e.target.classList.contains('append-row');\n  const IS_REMOVE_ROW = e.target.classList.contains('remove-row');\n  const IS_APPEND_COLUMN = e.target.classList.contains('append-column');\n  const IS_REMOVE_COLUMN = e.target.classList.contains('remove-column');\n\n  const arr = [\n    IS_APPEND_ROW,\n    IS_REMOVE_ROW,\n    IS_APPEND_COLUMN,\n    IS_REMOVE_COLUMN,\n  ];\n\n  const result = arr.findIndex((item) => item === true);\n\n  switch (result) {\n    case 0:\n      append(ROW);\n      break;\n    case 1:\n      remove(ROW);\n      break;\n    case 2:\n      append(COLUMN);\n      break;\n    case 3:\n      remove(COLUMN);\n      break;\n  }\n}\n\nfunction updateButtonsState() {\n  const appendRow = document.querySelector('.append-row');\n  const appendColumn = document.querySelector('.append-column');\n  const removeRow = document.querySelector('.remove-row');\n  const removeColumn = document.querySelector('.remove-column');\n\n  const trList = field.querySelectorAll('tr');\n\n  const allRows = [...trList];\n  const allCols = field.querySelector('tr').children;\n  \n  removeRow.disabled = allRows.length <= 2;\n  appendRow.disabled = allRows.length >= 10;\n  removeColumn.disabled = allCols.length <= 2;\n  appendColumn.disabled = allCols.length >= 10;\n}\n\nupdateButtonsState();\ncontainer.addEventListener('click', clickActionButton);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}